version: '2.2'
services:
  reverse-proxy:
    image: traefik:v2.2
    command: --api.insecure=true --providers.docker --entryPoints.http.address=:80
    ports:
      - '127.0.0.1:80:80'
      - '127.0.0.1:8080:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  elasticsearch:
    image: elasticsearch:7.9.0
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.elasticsearch.loadbalancer.server.port=9200'
      - 'traefik.http.routers.elasticsearch.rule=Host(`elasticsearch.vcap.me`)'
      - 'traefik.http.routers.elasticsearch.entrypoints=http'
    ports:
      - '127.0.0.1:9200:9200'
  kibana:
    image: kibana:7.9.0
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.services.kibana.loadbalancer.server.port=5601'
      - 'traefik.http.routers.kibana.rule=Host(`kibana.vcap.me`)'
      - 'traefik.http.routers.kibana.entrypoints=http'
    ports:
      - '127.0.0.1:5601:5601'
  logstash:
    image: logstash:7.9.0
    expose:
      - 5000
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - 5000:5000/udp
